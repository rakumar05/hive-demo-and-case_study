


CREATE TABLE products (
  product_id INT,
  product_name STRING,
  product_category STRING,
  product_price DECIMAL(10, 2)
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','

tblproperties ("skip.header.line.count"="1");

LOAD DATA LOCAL INPATH '/tmp/product.csv' INTO TABLE products;


CREATE TABLE inventory (
  product_id INT,
  inventory_date DATE,
  inventory_level INT
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
tblproperties ("skip.header.line.count"="1");

LOAD DATA LOCAL INPATH '/tmp/inventory.csv' INTO TABLE inventory;
=========================================================================
Question 1. What are the top 5 products with the highest inventory levels on the most recent inventory date?

SELECT p.product_id, p.product_name, p.product_category, p.product_price, i.inventory_level
FROM products p
JOIN (
    SELECT product_id, inventory_level
    FROM inventory
    WHERE inventory_date = (
        SELECT MAX(inventory_date) FROM inventory
    )
) i
ON p.product_id = i.product_id
ORDER BY i.inventory_level DESC
LIMIT 5;


==============================================================================
Question 2. What is the total inventory level for each product category on the most recent inventory date?

SELECT p.product_category, SUM(i.inventory_level) AS total_inventory_level
FROM products p
JOIN inventory i ON p.product_id = i.product_id
WHERE i.inventory_date = (SELECT MAX(inventory_date) FROM inventory)
GROUP BY p.product_category;


===============================================================================
Question 3. What is the average inventory level for each product category for the month of January 2022?

SELECT p.product_category, AVG(i.inventory_level) AS avg_inventory_level
FROM products p
JOIN inventory i ON p.product_id = i.product_id
WHERE i.inventory_date >= '2022-01-01' AND i.inventory_date < '2022-02-01'
GROUP BY p.product_category;
=============================================================================
Question 4. Which products had a decrease in inventory level from the previous inventory date to the current inventory date?



SELECT i1.product_id, p.product_name, i1.inventory_level - i2.inventory_level AS inventory_difference
FROM inventory i1
JOIN inventory i2 ON i1.product_id = i2.product_id 
         AND i1.inventory_date = i2.inventory_date + INTERVAL '1 day'
JOIN products p ON i1.product_id = p.product_id
WHERE i1.inventory_level < i2.inventory_level;


==============================================================================
Question 5. What is the overall trend in inventory levels for each product category over the month of January 2022?

SELECT p.product_category, i.inventory_date, AVG(i.inventory_level) AS avg_inventory_level
FROM products p
JOIN inventory i ON p.product_id = i.product_id
WHERE i.inventory_date >= '2022-01-01' AND i.inventory_date < '2022-02-01'
GROUP BY p.product_category, i.inventory_date
ORDER BY p.product_category, i.inventory_date;


